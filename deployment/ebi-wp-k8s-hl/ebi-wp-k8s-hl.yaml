---
apiVersion: v1
kind: List
items:
  - apiVersion: v1
    kind: Namespace
    metadata:
      name: emgapiv2-hl-exp
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: proxy-config
      namespace: emgapiv2-hl-exp
    data:
      HTTP_PROXY: "http://hh-wwwcache.ebi.ac.uk:3128"
      HTTPS_PROXY: "http://hh-wwwcache.ebi.ac.uk:3128"
      http_proxy: "http://hh-wwwcache.ebi.ac.uk:3128"
      https_proxy: "http://hh-wwwcache.ebi.ac.uk:3128"
      no_proxy: "localhost,.cluster.local"
  ###############################
  #### APP/API               ####
  ###############################
  - apiVersion: v1
    kind: PersistentVolume
    metadata:
      name: emgapi-vol-nfs
      namespace: emgapiv2-hl-exp
    spec:
      capacity:
        storage: 10Gi
      volumeMode: Filesystem
      accessModes:
        - ReadWriteMany
      mountOptions:
        - nfsvers=3
      nfs:
        server: hh-isi-srv-vlan1496.ebi.ac.uk
        path: /ifs/public/rw/metagenomics/mgnify/deployments/apiv2/DEV
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: emgapi-volume-claim-3
      namespace: emgapiv2-hl-exp
    spec:
      storageClassName: ""
      accessModes:
        - ReadWriteMany
      resources:
        requests:
          storage: 3Gi
      volumeName: emgapi-vol-nfs
  - apiVersion: v1
    kind: PersistentVolume
    metadata:
      name: emgapi-vol-nfs-services
      namespace: emgapiv2-hl-exp
    spec:
      capacity:
        storage: 10Gi
      volumeMode: Filesystem
      accessModes:
        - ReadOnlyMany
      mountOptions:
        - nfsvers=3
      nfs:
        server: hh-isi-srv-vlan1496.ebi.ac.uk
        path: /ifs/public/services/metagenomics/results
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: emgapi-services-volume-claim-1
      namespace: emgapiv2-hl-exp
    spec:
      storageClassName: ""
      accessModes:
        - ReadOnlyMany
      resources:
        requests:
          storage: 3Gi
      volumeName: emgapi-vol-nfs-services

  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: emgapi-config
      namespace: emgapiv2-hl-exp
    data:
      DJANGO_SETTINGS_MODULE: "emgapiv2.settings"
      PREFECT_API_URL: "http://prefect-server.emgapiv2-hl-exp.svc.cluster.local:4200/api"
      PREFECT_HOME: "/app/data/prefect"
      # PREFECT_LOCAL_STORAGE_PATH: "/app/data/prefect/storage"


  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: emgapiv2-app
      namespace: emgapiv2-hl-exp
      labels:
        app: emgapiv2
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: emgapi
      template:
        metadata:
          labels:
            app: emgapi
        spec:
          securityContext:
            runAsUser: 7123
            runAsGroup: 1347
          volumes:
            - name: emgapi-app-storage
              persistentVolumeClaim:
                claimName: emgapi-volume-claim-3
            - name: emgapi-results-storage
              persistentVolumeClaim:
                claimName: emgapi-services-volume-claim-1
          containers:
            - image: quay.io/microbiome-informatics/emgapiv2:ebi-wp-k8s-hl
              imagePullPolicy: Always
              name: emgapi
              envFrom:
                - secretRef:
                    name: emgapi-secret
                - configMapRef:
                    name: emgapi-config
                - configMapRef:
                    name: proxy-config
              ports:
                - containerPort: 8000
                  name: gunicorn
              volumeMounts:
                - mountPath: "/app/data"
                  name: emgapi-app-storage
                - mountPath: "/results"
                  name: emgapi-results-storage
          imagePullSecrets:
            - name: quay-pull-secret
  - apiVersion: v1
    kind: Service
    metadata:
      name: emgapiv2
      namespace: emgapiv2-hl-exp
      labels:
        app: emgapi
    spec:
      type: NodePort
      selector:
        app: emgapi
      ports:
        - port: 8000
          targetPort: 8000
          protocol: TCP
  - apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      name: emgapi-ingress
      namespace: emgapiv2-hl-exp
      annotations:
        kubernetes.io/ingress.class: "nginx"
    spec:
      rules:
        - host: apiv2-dev.mgnify.org
          http:
            paths:
              - path: /
                pathType: Prefix
                backend:
                  service:
                    name: emgapiv2
                    port:
                      number: 8000

  ###############################
  #### PREFECT SERVER        ####
  ###############################
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: prefect-server
      namespace: emgapiv2-hl-exp
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: prefect-server
      template:
        metadata:
          labels:
            app: prefect-server
        spec:
          containers:
            - name: prefect-server
              image: prefecthq/prefect:2.18.3-python3.12
              imagePullPolicy: Always
              command: ["/opt/prefect/entrypoint.sh"]
              args: ["prefect", "server", "start"]
              envFrom:
                - configMapRef:
                    name: proxy-config
              env:
                - name: PREFECT_UI_URL
                  value: http://prefect-dev.mgnify.org/api
                - name: PREFECT_API_URL
                  value: http://prefect-dev.mgnify.org/api
                - name: PREFECT_UI_API_URL
                  value: http://prefect-dev.mgnify.org/api
                - name: PREFECT_SERVER_API_HOST
                  value: 0.0.0.0
                - name: PREFECT_API_DATABASE_CONNECTION_URL
                  valueFrom:
                    secretKeyRef:
                      key: PREFECT_API_DATABASE_CONNECTION_URL
                      name: emgapi-secret
                - name: EXTRA_PIP_PACKAGES
                  value: httpx[cli] nextflowpy
                - name: PREFECT_LOCAL_STORAGE_PATH
                  value: /app/data/prefect/storage
              ports:
                - containerPort: 4200

  - apiVersion: v1
    kind: Service
    metadata:
      name: prefect-server
      namespace: emgapiv2-hl-exp
    spec:
      type: ClusterIP
      ports:
        - port: 4200
          targetPort: 4200
      selector:
        app: prefect-server

  #### OAUTH2 PROXY (USER LOGIN VIA GITHUB)  ####
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: oauth2-proxy
      namespace: emgapiv2-hl-exp
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: oauth2-proxy
      template:
        metadata:
          labels:
            app: oauth2-proxy
        spec:
          containers:
            - name: oauth2-proxy
              image: quay.io/oauth2-proxy/oauth2-proxy:v7.6.0
              envFrom:
                - configMapRef:
                    name: proxy-config
                - secretRef:
                    name: github-oauth-secret
              env:
                - name: OAUTH2_PROXY_COOKIE_SECRET
                  valueFrom:
                    secretKeyRef:
                      name: oauth2-proxy-cookie-secret
                      key: oauth2-proxy-cookie-secret
                - name: OAUTH2_PROXY_TRUSTED_IPS
                  valueFrom:
                    secretKeyRef:
                      name: oauth2-proxy-trusted-ip
                      key: oauth2-proxy-trusted-ip
              ports:
                - containerPort: 4180
              args:
                - --provider=github
                - --github-org=EBI-Metagenomics
                - --email-domain=*
                - --upstream=file:///dev/null
                - --http-address=0.0.0.0:4180
                - --redirect-url=http://prefect-dev.mgnify.org/oauth2/callback
                - --custom-sign-in-logo=https://raw.githubusercontent.com/EBI-Metagenomics/ebi-metagenomics-client/main/public/images/mgnify_logo_reverse.svg
                - --cookie-secure=false
                - --cookie-domain=.mgnify.org
                - --reverse-proxy=true
                - --standard-logging=true
                - --auth-logging=true
                - --request-logging=true
                - --real-client-ip-header=X-Forwarded-For

  - apiVersion: v1
    kind: Service
    metadata:
      name: prefect-via-oauth
      namespace: emgapiv2-hl-exp
      labels:
        app: oauth2-proxy
    spec:
      ports:
        - port: 4180
          targetPort: 4180
          protocol: TCP
      selector:
        app: oauth2-proxy

  #### INGRESSES ####
  #### Handle oauth flow ####
  - apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      name: prefect-oauth2-proxy-ingress
      namespace: emgapiv2-hl-exp
    spec:
      ingressClassName: nginx
      rules:
        - host: prefect-dev.mgnify.org
          http:
            paths:
              - path: /oauth2
                pathType: Prefix
                backend:
                  service:
                    name: prefect-via-oauth
                    port:
                      number: 4180

  #### Serve prefect to auth'd users, redirect unauth'd users to oauth2-proxy ####
  - apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      name: prefect-ingress
      namespace: emgapiv2-hl-exp
      annotations:
        nginx.ingress.kubernetes.io/auth-signin: http://$host/oauth2/sign_in?rd=$escaped_request_uri
        nginx.ingress.kubernetes.io/auth-url: http://$host/oauth2/auth
        nginx.ingress.kubernetes.io/configuration-snippet: |
          # Forward the real client IP header
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    spec:
      ingressClassName: nginx
      rules:
        - host: prefect-dev.mgnify.org
          http:
            paths:
              - path: /
                pathType: Prefix
                backend:
                  service:
                    name: prefect-server
                    port:
                      number: 4200


  - apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      name: prefect-work-node-ingress
      namespace: emgapiv2-hl-exp
      annotations:
        nginx.ingress.kubernetes.io/auth-type: basic
        nginx.ingress.kubernetes.io/auth-secret: prefect-workers-basic-auth
        nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required'
        nginx.ingress.kubernetes.io/configuration-snippet: |
          if ($request_uri ~* "^/workers/api") {
            rewrite ^/workers/api(.*)$ /api$1 break;
          }
    spec:
      rules:
        - host: prefect-dev.mgnify.org
          http:
            paths:
              - path: /workers/api
                pathType: Prefix
                backend:
                  service:
                    name: prefect-server
                    port:
                      number: 4200
